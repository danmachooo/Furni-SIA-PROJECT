<!doctype html>
<html lang="en">
  <%- include('partials/head') %>
  <body class="bg-light">
    <%- include('partials/header') %>
    <main class="container py-5">
      <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
          <div class="card shadow-sm">
            <div class="card-body">
              <h2 class="card-title h3 mb-4 text-center">Your Order</h2>
              <div class="table-responsive">
                <table class="table table-hover">
                  <thead class="table-light">
                    <tr>
                      <th>Product</th>
                      <th class="text-end">Total</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% if (cart && cart.length) { %>
                      <% cart.forEach(item => { %>
                        <tr>
                          <td><%= item.name %> <span class="badge bg-secondary mx-2"><%= item.quantity %></span></td>
                          <td class="text-end">$<%= (item.price * item.quantity).toFixed(2) %></td>
                        </tr>
                      <% }); %>
                      <tr class="table-active">
                        <td class="fw-bold">Order Total</td>
                        <td class="fw-bold text-end">$<%= cart.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2) %></td>
                      </tr>
                    <% } else { %>
                      <tr>
                        <td colspan="2" class="text-center text-muted">Your cart is empty.</td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>

              <h3 class="h5 mb-3 mt-4">Payment Method</h3>
              <div class="mb-4">
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cash" checked>
                  <label class="form-check-label" for="cashOnDelivery">
                    Cash on Delivery
                  </label>
                </div>
                <div class="form-check form-check-inline">
                  <input class="form-check-input" type="radio" name="paymentMethod" id="paypal" value="paypal">
                  <label class="form-check-label" for="paypal">
                    PayPal
                  </label>
                </div>
              </div>

              <div id="paypal-button-container" class="mb-3" style="display: none;"></div>
              <button id="placeOrderBtn" class="btn btn-primary w-100 py-2">Place Order</button>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const paymentMethod = document.getElementsByName('paymentMethod');
        const paypalButtonContainer = document.getElementById('paypal-button-container');
        const placeOrderBtn = document.getElementById('placeOrderBtn');
    
        function togglePaymentMethod() {
          if (this.value === 'paypal') {
            paypalButtonContainer.style.display = 'block';
            placeOrderBtn.style.display = 'none';
          } else {
            paypalButtonContainer.style.display = 'none';
            placeOrderBtn.style.display = 'block';
          }
        }
        paymentMethod.forEach(radio => radio.addEventListener('change', togglePaymentMethod));
    
        // Function to handle the checkout process
        async function handleCheckout(paymentMethod) {
          try {
            const response = await fetch('/checkout', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                paymentMethod: paymentMethod
              })
            });
    
            if (!response.ok) {
              throw new Error('Checkout failed');
            }
  
          } catch (error) {
            console.error('Error during checkout:', error);
            Swal.fire({
              title: 'Checkout Failed',
              text: 'There was an error processing your order. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        }
    
        paypal.Buttons({
          createOrder: function () {
            return fetch('/api/paypal/create-order', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                amount: '<%= cart.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2) %>',
                currency: 'USD' 
              })
            })
            .then(response => response.json())
            .then(order => order.id);
          },
          onApprove: function (data, actions) {
            return fetch(`/api/paypal/capture-order/${data.orderID}`, {
              method: 'POST'
            })
            .then(response => response.json())
            .then(details => {
              // Handle checkout after successful PayPal payment
              handleCheckout('paypal')
                .then(() => {
                  Swal.fire({
                    title: 'Payment Successful!',
                    text: 'Transaction completed by ' + details.payer.name.given_name,
                    icon: 'success',
                    confirmButtonText: 'Continue'
                  }).then((result) => {
                    if (result.isConfirmed) {
                      window.location.href = '/thankyou';
                    }
                  });
                });
            });
          },
          onError: function (err) {
            Swal.fire({
              title: 'Payment Failed',
              text: 'There was an error processing your payment. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        }).render('#paypal-button-container');
    
        placeOrderBtn.addEventListener('click', function() {
          // Handle cash on delivery checkout
          handleCheckout('cash')
            .then(() => {
              Swal.fire({
                title: 'Order Placed!',
                text: 'Your order has been placed successfully!',
                icon: 'success',
                confirmButtonText: 'Continue'
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = '/thankyou';
                }
              });
            });
        });
      });
    </script>  </body>
</html>

